name: Publish NuGet Package

on:
  push:
    branches: [ "ci-improvements" ]


jobs:
  build:
    runs-on: ubuntu-latest

    env:
      Solution_Name: NetFinance.sln
      NetFinance_Project_Path: Application/Application.csproj
      Test_Project_Path: Tests/Tests.csproj

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.x

    - name: Restore dependencies
      run: dotnet restore ${{ env.Solution_Name }}

    - name: Build project
      run: dotnet build ${{ env.Solution_Name }} --configuration Release  --no-restore

    # - name: Execute unit tests
    #   run: dotnet test ${{ env.Test_Project_Path }} --configuration Release 
      
    - name: Pack NuGet Package
      run: dotnet pack ${{ env.Solution_Name }} --configuration Release --no-build --output ./nupkg

    # - name: Publish to NuGet
    #   if: success()
    #   env:
    #      NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
    #   run: dotnet nuget push ./nupkg/*.nupkg --source https://api.nuget.org/v3/index.json --api-key $NUGET_API_KEY

    - name: Extract Version
      id: get_version
      run: |
        VERSION=$(grep '<Version>' ${{ env.NetFinance_Project_Path }} | sed -E 's/.*<Version>(.*)<\/Version>.*/\1/')
        echo "VERSION=$VERSION"
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Create Git Tag
      run: |
        git tag -a "v${{ env.VERSION }}" -m "Release v${{ env.VERSION }}"
        git push origin "v${{ env.VERSION }}"

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "v${{ env.VERSION }}"
        release_name: "Release v${{ env.VERSION }}"
        body: |
          - NuGet package published
          - See [NuGet Gallery](https://www.nuget.org/packages/YourPackageName)
        draft: false
        prerelease: false